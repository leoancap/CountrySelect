// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.mjs";
import * as Theme from "../../../Styles/Theme.mjs";
import * as React from "react";

var className = CssJs.style([
      CssJs.position("absolute"),
      CssJs.marginTop({
            NAME: "px",
            VAL: Theme.Spacing.sm
          }),
      CssJs.borderRadius({
            NAME: "px",
            VAL: Theme.Radius.sm
          }),
      CssJs.backgroundColor({
            NAME: "hex",
            VAL: "ffffff"
          }),
      CssJs.zIndex(2)
    ]);

function Select_Components$Menu(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: className
            }, children);
}

var Menu = {
  className: className,
  make: Select_Components$Menu
};

var className$1 = CssJs.style([
      CssJs.top("zero"),
      CssJs.right("zero"),
      CssJs.bottom("zero"),
      CssJs.left("zero"),
      CssJs.position("fixed"),
      CssJs.zIndex(1)
    ]);

function Select_Components$Backdrop(Props) {
  var onClick = Props.onClick;
  return React.createElement("div", {
              className: className$1,
              onClick: onClick
            });
}

var Backdrop = {
  className: className$1,
  make: Select_Components$Backdrop
};

var className$2 = CssJs.style([CssJs.position("relative")]);

function Select_Components$Dropdown(Props) {
  var children = Props.children;
  var isOpen = Props.isOpen;
  var target = Props.target;
  var onClose = Props.onClose;
  return React.createElement("div", {
              className: className$2
            }, target, isOpen ? React.createElement(React.Fragment, undefined, React.createElement(Select_Components$Menu, {
                        children: children
                      }), React.createElement(Select_Components$Backdrop, {
                        onClick: onClose
                      })) : null);
}

var Dropdown = {
  className: className$2,
  make: Select_Components$Dropdown
};

var className$3 = CssJs.style([
      CssJs.height({
            NAME: "px",
            VAL: -Theme.Spacing.sm_4 | 0
          }),
      CssJs.height({
            NAME: "px",
            VAL: -Theme.Spacing.sm_4 | 0
          })
    ]);

function Select_Components$DropdownIndicator(Props) {
  return React.createElement("div", {
              className: className$3
            }, React.createElement("svg", {
                  role: "presentation",
                  height: String(Theme.Spacing.sm_4),
                  width: String(Theme.Spacing.sm_4),
                  focusable: "false",
                  viewBox: "-8 -8 24 24"
                }, React.createElement("path", {
                      clipRule: "evenodd",
                      d: "M10 5C10 6.01927 9.69501 6.96731 9.17131 7.75783L12.47 11.06L11.06 12.47L7.75786 9.17129C6.96734 9.695 6.01929 10 5 10C2.23858 10 0 7.76142 0 5C0 2.23858 2.23858 0 5 0C7.76142 0 10 2.23858 10 5ZM5 8.2C6.76731 8.2 8.2 6.76731 8.2 5C8.2 3.23269 6.76731 1.8 5 1.8C3.23269 1.8 1.8 3.23269 1.8 5C1.8 6.76731 3.23269 8.2 5 8.2Z",
                      fill: "#333333",
                      fillRule: "evenodd"
                    })));
}

var DropdownIndicator = {
  className: className$3,
  make: Select_Components$DropdownIndicator
};

function Select_Components$ChevronDown(Props) {
  return React.createElement("svg", {
              height: Theme.Spacing.sm_s,
              width: Theme.Spacing.sm_s,
              fill: "none",
              viewBox: "0 0 8 5",
              xmlns: "http://www.w3.org/2000/svg"
            }, React.createElement("path", {
                  clipRule: "evenodd",
                  d: "M0 0H8L4 5L0 0Z",
                  fill: "#333333",
                  fillRule: "evenodd"
                }));
}

var ChevronDown = {
  make: Select_Components$ChevronDown
};

var className$4 = CssJs.style([
      CssJs.display("flex"),
      CssJs.justifyContent("center"),
      CssJs.alignItems("center"),
      CssJs.height({
            NAME: "px",
            VAL: Theme.Spacing.sm_4
          })
    ]);

function Select_Components$NoOptions(Props) {
  return React.createElement("div", {
              className: className$4
            }, React.createElement("span", undefined, "No Options"));
}

var NoOptions = {
  className: className$4,
  make: Select_Components$NoOptions
};

export {
  Menu ,
  Backdrop ,
  Dropdown ,
  DropdownIndicator ,
  ChevronDown ,
  NoOptions ,
  
}
/* className Not a pure module */
