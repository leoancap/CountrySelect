// Generated by ReScript, PLEASE EDIT WITH CARE

import * as CssJs from "bs-css-emotion/src/CssJs.mjs";
import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as Select from "../common/Select/Select.mjs";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as CountryHook from "../../hooks/CountryHook.mjs";

var countryLabelStyles = CssJs.style([
      CssJs.display("flex"),
      CssJs.gap({
            NAME: "px",
            VAL: 8
          })
    ]);

function renderCountryLabel(optionCountry) {
  return React.createElement("div", {
              className: countryLabelStyles
            }, optionCountry !== undefined ? React.createElement(React.Fragment, undefined, React.createElement("span", {
                        className: "fi fi-" + optionCountry.value
                      }), React.createElement("span", undefined, optionCountry.label)) : "Select a Country");
}

function getCountryByCode(countries, code) {
  return Belt_Option.flatMap(code, (function (code) {
                return Caml_option.undefined_to_opt(countries.find(function (thisCountry) {
                                return thisCountry.value === code;
                              }));
              }));
}

function CountrySelect(Props) {
  var onChange = Props.onChange;
  var country = Props.country;
  var className = Props.className;
  var countriesState = CountryHook.use(undefined);
  var match = React.useState(function () {
        return country;
      });
  var setCountryCode = match[1];
  var onCountryChange = React.useCallback((function (newCountry) {
          Curry._1(setCountryCode, (function (param) {
                  return Belt_Option.map(newCountry, (function (country) {
                                return country.value;
                              }));
                }));
          return Curry._1(onChange, newCountry);
        }), []);
  if (typeof countriesState === "number") {
    if (countriesState !== 0) {
      return React.createElement("div", undefined, "Something went wrong :(");
    } else {
      return React.createElement("div", undefined, "Fetching...");
    }
  }
  var countries = countriesState._0;
  var tmp = {
    autoFocus: true,
    backspaceRemovesValue: true,
    controlShouldRenderValue: false,
    formatOptionLabel: renderCountryLabel,
    hideSelectedOptions: false,
    isClearable: true,
    onChange: onCountryChange,
    options: countries,
    value: getCountryByCode(countries, match[0])
  };
  if (className !== undefined) {
    tmp.className = Caml_option.valFromOption(className);
  }
  return React.createElement(Select.make, tmp);
}

var make = CountrySelect;

export {
  countryLabelStyles ,
  renderCountryLabel ,
  getCountryByCode ,
  make ,
  
}
/* countryLabelStyles Not a pure module */
